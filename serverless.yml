service: aynitech-rrhh-slack-notifications-api
frameworkVersion: '3'
configValidationMode: error
useDotenv: true
deprecationNotificationMode: warn:summary

provider:
  name: aws
  stage: dev
  region: ${env:REGION}
  profile: ${env:PROFILE}
  tags:
    Environment: ${env:STAGE}
    Module: ${env:MODULE}
    Project: ${env:PROJECT}
    Owner: ${env:OWNER}
  deploymentBucket:
    name: ${env:BUCKET_DEPLOYMENT}
    serverSideEncryption: AES256
    versioning: true
  
functions:
  api:
    name: rrhh-slack-notifications-api
    runtime: nodejs16.x
    handler: src/lambda.handler
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
          - "dynamodb:Scan"
          - "dynamodb:Query"
          - "dynamodb:PutItem"
          - "dynamodb:UpdateItem"
          - "dynamodb:DeleteItem"
        Resource:
          - arn:aws:dynamodb:${env:REGION}:${env:ACCOUNT}:table/${env:ANNOUNCEMENTS_TABLE}
          - arn:aws:dynamodb:${env:REGION}:${env:ACCOUNT}:table/${env:BIRTHDAYS_TABLE}
          - arn:aws:dynamodb:${env:REGION}:${env:ACCOUNT}:table/${env:EVENTS_TABLE}
      - Effect: "Allow"
        Action:
          - "s3:PutObject"
          - "s3:DeleteObject"
        Resource:
          - arn:aws:s3:::${env:BUCKET_IMAGES}/*
    events:
      - http:
          path: /
          method: GET
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
      - http:
          path: /
          method: POST
          cors: true
        
plugins:
  - serverless-dotenv-plugin
  - serverless-iam-roles-per-function
